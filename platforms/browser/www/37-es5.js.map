{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-menu_4-ios.entry.js"],"names":["Menu","hostRef","lastOnEnd","blocker","createBlocker","disableScroll","mode","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","get","el","parent","parentNode","contentId","console","warn","content","document","getElementById","querySelector","tagName","error","typeChanged","sideChanged","_register","gesture","createGesture","gestureName","gesturePriority","threshold","canStart","ev","onWillStart","onStart","onMove","onEnd","destroy","_unregister","backdropEl","detail","isPane","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","ani","direction","easing","playAsync","playSync","canSwipe","_getOpenSync","checkEdgeSide","window","currentX","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","isOpen","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","newStepValue","adjustedStepValue","onFinish","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","stop","isActive","setDisabled","forceClosing","_setActiveMenu","role","ref","tappable","Math","max","win","posX","innerWidth","updateVisibility","menu","menuEl","MenuButton","visible","autoHide","onClick","toggle","visibilityChanged","color","menuIcon","hidden","attrs","Object","assign","icon","lazy","MenuController","enable","isEnabled","getOpen","getMenus","name","registerAnimation","MenuToggle"],"mappings":"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","file":"37-es5.js","sourcesContent":["import { r as registerInstance, c as getIonMode, d as createEvent, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-46f4a262.js';\nimport './animation-af478fe9.js';\nimport { GESTURE_CONTROLLER } from './index-624eea58.js';\nimport { m as menuController } from './index-1e5940d5.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-2812fda3.js';\n\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.mode = getIonMode(this);\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\n        }\n        const el = this.el;\n        const parent = el.parentNode;\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"my-content\"></ion-menu>\n  <div id=\"my-content\">...</div>\n`);\n        }\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    async componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await menuController._createAnimation(this.type, this);\n        if (!config.getBoolean('animated', true)) {\n            this.animation.duration(0);\n        }\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? 'cubic-bezier(0.4, 0.0, 0.6, 1)' : 'cubic-bezier(0.0, 0.0, 0.2, 1)');\n        if (animated) {\n            await ani.playAsync();\n        }\n        else {\n            ani.playSync();\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        if (!this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation\n            .direction((this._isOpen) ? 'reverse' : 'normal')\n            .progressStart(true);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.timeStamp;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * TODO: stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         * Not sure if the negative step value is an error or not\n         */\n        const adjustedStepValue = (stepValue <= 0) ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.4, 0), new Point(0.6, 1), new Point(1, 1), clamp(0, adjustedStepValue, 1));\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled) {\n            menuController._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.playSync();\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, mode, isPaneVisible } = this;\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    static get style() { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\"; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuEl = await menuController.get(menu);\r\n    return !!(menuEl && await menuEl.isActive());\r\n};\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', 'menu');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    static get style() { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--border-radius:4px;--color:var(--ion-color-primary,#3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.activated){opacity:.4}\\@media (any-hover:hover){:host(:hover){opacity:.6}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.1)}\"; }\n};\n\nconst MenuController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Open the menu. If a menu is not provided then it will open the first\n     * menu found. If the specified menu is `start` or `end`, then it will open\n     * the enabled menu on that side. Otherwise, it will try to find the menu\n     * using the menu's `id` property. If a menu is not found then it will\n     * return `false`.\n     *\n     * @param menu The menuId or side of the menu to open.\n     */\n    open(menu) {\n        return menuController.open(menu);\n    }\n    /**\n     * Close the menu. If a menu is specified, it will close that menu.\n     * If no menu is specified, then it will close any menu that is open.\n     * If it does not find any open menus, it will return `false`.\n     *\n     * @param menu The menuId or side of the menu to close.\n     */\n    close(menu) {\n        return menuController.close(menu);\n    }\n    /**\n     * Toggle the menu open or closed. If the menu is already open, it will try to\n     * close the menu, otherwise it will try to open it. Returns `false` if\n     * a menu is not found.\n     *\n     * @param menu The menuId or side of the menu to toggle.\n     */\n    toggle(menu) {\n        return menuController.toggle(menu);\n    }\n    /**\n     * Enable or disable a menu. Disabling a menu will not allow gestures\n     * for that menu or any calls to open it. This is useful when there are\n     * multiple menus on the same side and only one of them should be allowed\n     * to open. Enabling a menu will automatically disable all other menus\n     * on that side.\n     *\n     * @param enable If `true`, the menu should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable.\n     */\n    enable(enable, menu) {\n        return menuController.enable(enable, menu);\n    }\n    /**\n     * Enable or disable the ability to swipe open the menu.\n     *\n     * @param enable If `true`, the menu swipe gesture should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\n     */\n    swipeGesture(enable, menu) {\n        return menuController.swipeGesture(enable, menu);\n    }\n    /**\n     * Get whether or not the menu is open. Returns `true` if the specified\n     * menu is open. If a menu is not specified, it will return `true` if\n     * any menu is currently open.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    isOpen(menu) {\n        return menuController.isOpen(menu);\n    }\n    /**\n     * Get whether or not the menu is enabled. Returns `true` if the\n     * specified menu is enabled. Returns `false` if a menu is disabled\n     * or not found.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    isEnabled(menu) {\n        return menuController.isEnabled(menu);\n    }\n    /**\n     * Get a menu instance. If a menu is not provided then it will return the first\n     * menu found. If the specified menu is `start` or `end`, then it will return the\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\n     * `id` property. If a menu is not found then it will return `null`.\n     *\n     * @param menu The menuId or side of the menu.\n     */\n    get(menu) {\n        return menuController.get(menu);\n    }\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    getOpen() {\n        return menuController.getOpen();\n    }\n    /**\n     * Get all menu instances.\n     */\n    getMenus() {\n        return menuController.getMenus();\n    }\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    isAnimating() {\n        return menuController.isAnimating();\n    }\n    /**\n     * Registers a new animation that can be used with any `ion-menu` by\n     * passing the name of the animation in its `type` property.\n     *\n     * @param name The name of the animation to register.\n     * @param animation The animation function to register.\n     */\n    async registerAnimation(name, animation) {\n        return menuController.registerAnimation(name, animation);\n    }\n};\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n    static get style() { return \":host(.menu-toggle-hidden){display:none}\"; }\n};\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\n"]}