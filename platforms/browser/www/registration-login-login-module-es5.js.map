{"version":3,"sources":["webpack:///src/app/registration/login/login.page.html","webpack:///src/app/registration/login/login-routing.module.ts","webpack:///src/app/registration/login/login.module.ts","webpack:///src/app/registration/login/login.page.scss","webpack:///src/app/registration/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","providers","LoginPage","ble","ngZone","navctrl","userService","toasterService","countryCode","checkedPrivacy","devices","phoneNumber","userSignup","mobile","String","subscribe","res","navigationExtras","queryParams","navigateForward","toastFail","scan","device","onDeviceDiscovered","console","log","JSON","stringify","run","name","push","str","buf","ArrayBuffer","length","bufView","Uint8Array","i","strLen","charCodeAt","connect","id","data","write","characteristics","service","characteristic","then","disconnect","selector","template"],"mappings":"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","file":"registration-login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <ion-grid class=\\\"input-position\\\">\\n    <ion-row>\\n      <ion-col>\\n        <h2>Enter your phone number</h2>\\n        <h5 class=\\\"color-gray thin-font ion-no-margin\\\">We will send you 4 digit verfication code</h5>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size='2'>\\n        <ion-input class=\\\"num-input\\\" value=\\\"+91\\\"></ion-input>\\n      </ion-col>\\n      <ion-col size='10'>\\n        <ion-input type=\\\"tel\\\" [(ngModel)]=\\\"phoneNumber\\\" class=\\\"num-input\\\" placeholder=\\\"9876543210\\\" maxlength=\\\"10\\\">\\n        </ion-input>\\n      </ion-col>\\n    </ion-row>\\n    <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"generateOTP()\\\">Generate OTP</ion-button>\\n\\n    <ion-item class=\\\"input-transperent-border\\\">\\n      <ion-checkbox [(ngModel)]=\\\"checkedPrivacy\\\" class=\\\"terms-checkbox\\\"></ion-checkbox>\\n      <h5 class=\\\"color-gray thin-font\\\">Signup with your accepting coin laundry terms & conditions, privacy policy and\\n        product info.</h5>\\n    </ion-item>\\n    <!-- <ion-list> \\n      <div ion-item *ngFor=\\\"let device of devices\\\">\\n        <h2>{{ device.name || 'Unnamed' }}</h2>\\n        <p>{{ device.id }}</p>\\n        <p>RSSI: {{ device.rssi }}</p>\\n        <ion-button  color=\\\"primary\\\" float-right (click)=\\\"connect(device)\\\">connect</ion-button>\\n            </div>  \\n     </ion-list>  -->\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial';\nimport { BLE } from '@ionic-native/ble/ngx';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage],\n  providers: [BLE]\n})\nexport class LoginPageModule { }\n","export default \"ion-input {\\n  margin: 1em 0;\\n  letter-spacing: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cmF0aW9uL2xvZ2luL0Q6XFxQcm9qZWN0c1xcbGF1bmRyeVxcYXBwL3NyY1xcYXBwXFxyZWdpc3RyYXRpb25cXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taW5wdXR7XG4gICAgbWFyZ2luOiAxZW0gMDtcbiAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xufSIsImlvbi1pbnB1dCB7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGxldHRlci1zcGFjaW5nOiA0cHg7XG59Il19 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { ToastService } from 'src/app/common/service/toast/toast.service';\nimport { UserapiService } from 'src/app/common/apilayer/APIs/userapi.service';\nimport { NavigationExtras } from '@angular/router';\nimport { stringify } from 'querystring';\nimport { BLE } from '@ionic-native/ble/ngx';\n// import { BluetoothSerial } from '@ionic-native/bluetooth-serial';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n\n  phoneNumber: number\n\n  countryCode: string = '+91'\n\n  checkedPrivacy: boolean = true;\n  devices: any[] = [];\n  statusMessage: any;\n\n  constructor(\n    // private bluetoothSerial: BluetoothSerial,\n    private ble: BLE, private ngZone: NgZone, private navctrl: NavController, private userService: UserapiService, private toasterService: ToastService) { }\n\n  ngOnInit() {\n  }\n\n  generateOTP() {\n\n    if (this.phoneNumber > 999999999 && this.checkedPrivacy)\n      this.userService.userSignup({ mobile: String(this.phoneNumber) })\n        .subscribe(res => {\n          let navigationExtras: NavigationExtras = {\n            queryParams: {\n              phoneNumber: this.phoneNumber\n            }\n          };\n          this.navctrl.navigateForward('otp', navigationExtras)\n        })\n    else if (!this.checkedPrivacy)\n      this.toasterService.toastFail('Please check the terms & conditions')\n\n    else\n      this.toasterService.toastFail('Please enter a valid phone number')\n\n\n  }\n\n\n\n\n  /**Bluetooth Feature starts */\n\n  scan() {\n    this.devices = [];  \n    this.ble.scan([], 5).subscribe(\n      device => this.onDeviceDiscovered(device),\n    );\n  }\n\n  onDeviceDiscovered(device) {\n    console.log('Discovered ' + JSON.stringify(device, null, 2));\n    this.ngZone.run(() => {\n      if (device.name == 'MyESP32')\n        this.devices.push(device);\n    });\n\n  }\n\n  /**Bluetooth Feature starts to connect the device */\n\n  connect(device) {\n    let str = 'a'\n    var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n    var bufView = new Uint8Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    } this.ble.connect(device.id)\n      .subscribe(data => {\n        this.ble.write(device.id, data.characteristics[data.characteristics.length - 1].service,\n          data.characteristics[data.characteristics.length - 1].characteristic, buf)\n          .then(data => {\n            console.log(data)\n            this.ble.disconnect(device.id)\n          })\n      })\n  }\n  /** Blue tooth code ends*/\n\n\n}\n"]}