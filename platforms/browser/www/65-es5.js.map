{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js"],"names":["SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","visible","disabled","when","ionSplitPaneVisible","detail","isPane","bind","emit","styleChildren","updateState","rmL","undefined","contentId","console","warn","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","setPaneClass","mode","toAdd","toRemove","add","remove"],"mappings":"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","file":"65-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, e as getElement, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    componentWillLoad() {\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-split-pane>\n    ...\n    <div main>...</div>\n  </ion-split-pane>\n\nAFTER:\n  <ion-split-pane contentId=\"main-content\">\n    ...\n    <div id=\"main-content\">...</div>\n  </ion-split-pane>\n`);\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n    static get style() { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };\n"]}